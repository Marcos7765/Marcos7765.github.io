---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import fs from 'node:fs/promises';
import Path from 'path';
import * as cheerio from 'cheerio'

let paginas: Record<string, any>[];

//é horrível de recuperar info de título/descrição de .astro, tentar usar
//só md e instanciar .astro como componente daqui em diante
try {paginas = await Astro.glob('/src/pages/*.{md,astro}');
}catch (e){paginas = [];}

const htmls = import.meta.glob('/src/pages/*.html');
for (const path in htmls) {
	var filename = Path.dirname(new URL(import.meta.url).pathname).substring(3);
	//var filename = Path.dirname(new URL(Astro.url).pathname).substring(3);
	//var text = await fs.readFile(filename+'/'+(path.substring(11)), 'utf-8')
	var text = await fs.readFile("."+path, 'utf-8')
	var doc = cheerio.load(text)
	var extI = path.lastIndexOf('.html')
	paginas.push(
		{"url": path.substring(11,extI),
		"frontmatter": {
			"title":doc('title').text(),
			"description":doc('meta[name="about"]').attr('content')}
		}
	)
}
---

<Layout title="Oie">
	<main>
		<h1>finalmente com Astro.</h1>
		<h2>E uma <span class="text-gradient">preguiça</span> grande demais para montar um index.</h2>
		<p>só pra atualizar o repo já foi demorado</p>
		<p class="instructions">
			Aqui eu pretendo listar os arquivos do <code>src/pages</code> de algum jeito.<br />
			<strong>Code Challenge:</strong> saber como arrancar valor de um .astro vindo de glob() durante a build
		</p>
		<ul role="list" class="link-card-grid">
			<Card
				href="./"
				title="Index"
				body="AQUI MESMO"
			/>
			{
			paginas.map(
				pagina => 
					<Card
						href={pagina.url}
						title={pagina.frontmatter.title}
						body={pagina.frontmatter.description}
					/>
			)
			}
			

		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60%;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
